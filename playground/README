About KHexEdit2:
----------------

This is a new hex editor project, rewritten from scratch.
It consists of a lib, a qt designer plugin, an interface, a kpart and an app.
The first three are planned for inclusion in KDE 3.2, the interface in "kdelibs/interfaces",
the lib and the plugin in "kdeutils/khexedit".
The kpart and the app, once finished (too late for 3.2 surely), will be an addition/substitution
in "kdeutils/khexedit", too.

lib:
The lib is the main work. It offers a general usable hex edit widget KHexEdit
that interacts with an abstract data buffer interface KDataBuffer. This
interface can be subclassed to offer access to different data buffers like
paged gigabyte big files, video memory or whatever you can imagine
(hopefully). For those simply needing a widget for a plain array of bytes
there is the widget subclass KBytesEdit, which hides the databuffer interface
and publically simply interacts with arrays (like "char Array[25];").

interface:
In the KDE conference in Nove Hrady 2003 it was decided to handle the hex edit widget
like the regexp edit widget and make it a run time, not compile time dependency.
Therefore an interface had to be created that hopefully offers all needed calls.
It will rest in "kdelibs/interfaces".

designer plugin:
I have never used QT designer but Reinhold Kainhofer told me where to read about
how to make a designer plugin. So I made one for KBytesEdit. I tested so far its
appearance in designer (in "Views (KDE)"), using it in the layouting and 
changing its parameters. Seems to work so far :) 

kpart:
This is more of a proof of concept. And result of my first steps with KParts. 
But nevertheless usable.

app:
Same as with the kpart. One day this shell for the hex edit kpart might 
substitute KDE's KHexEdit app of today. The reason I wrote the widget was 
that I found the actual app to be very, well, sorry about this, no offense to 
Espen Sand, wild coded, everything was strongly tied together, so I couldn't 
simply rip of the widget part. Now, having a widget, it looks very naturally 
to me to rebuild the app using the widget, not at least for coherent user gui 
experience and code reduction. But this is still work in progress. I don't 
think it will be easy to reuse the new widget in the old app, if someone just 
got the idea. This man power might be better put into the kpart :)


I will lay all effort to the lib and the interface to finally get the editing working.
Please test both (the API should be close to stable).

Friedrich